name: â˜‚ Code Coverage

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ '**' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustc, rust-std, cargo, llvm-tools, llvm-tools-preview

      - name: Cache Project
        uses: Swatinem/rust-cache@v2

      - run: mkdir -p ./target/debug/coverage

      - name: Generate Code coverage
        env:
          CARGO_INCREMENTAL: '0'
          LLVM_PROFILE_FILE: "target/debug/coverage/bottle-time-processor-%p-%m.profraw"
          RUSTFLAGS: '-Cinstrument-coverage -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Cinstrument-coverage -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
        run: cargo test --all-features

      - name: Install grcov
        run: "curl -L https://github.com/mozilla/grcov/releases/download/v0.8.12/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf -"

      - run: zip ./target/debug/coverage/files.zip ./target/debug/deps/bottle-time-processor-*.gcda ./target/debug/deps/bottle-time-processor-*.gcno
      - run: grcov ./target/debug/coverage/files.zip -s . --service-name "Continuous Integration" --commit-sha ${GITHUB_SHA} -t lcov --branch --ignore-not-existing --ignore "../*" --ignore "/*" --ignore "*/test_helper.rs" -o ./target/debug/coverage/

      - run: zip ./target/debug/coverage/files.zip ./target/debug/coverage/bottle-time-processor-*.profraw
      - run: grcov ./target/debug/coverage/files.zip -s . --binary-path ./target/debug/ --service-name "Continuous Integration" --commit-sha ${GITHUB_SHA} -t lcov --branch --ignore-not-existing --ignore "../*" --ignore "/*" --ignore "*/test_helper.rs" -o ./target/debug/coverage/

      - name: Run grcov
        run: "./grcov . --llvm --binary-path target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore '/*' -o lcov.info"

      - name: Install covfix
        uses: actions-rs/install@v0.1
        with:
          crate: rust-covfix
          use-tool-cache: true

      - name: Run covfix
        run: rust-covfix lcov.info -o lcov.info --verbose

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: lcov.info
